name: Pipeline
run-name: Pipeline started by @${{ github.actor }}

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:22
    name: Build
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Instal packages
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Mobitec-api
          include-hidden-files: true
          path: |
            ./dist
            ./package-lock.json
            ./package.json
            ./README.md
            ./.env.example
            ./Dockerfile

  image:
    runs-on: ubuntu-latest
    name: Build and publish image
    needs: [build]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Mobitec-api
          path: .
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and Push the Docker Image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
